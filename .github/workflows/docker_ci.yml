concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.sha
    || github.ref }}
env:
  V_CI_MUSL: 1
jobs:
  alpine-docker-musl-gcc:
    container:
      env:
        VFLAGS: -cc gcc
      image: thevlang/vlang:alpine-build
      volumes:
      - ${{github.workspace}}:/opt/vlang
    permissions: write-all
    runs-on: ubuntu-20.04
    steps:
    - name: Collect Workflow Telemetry
      uses: Nfsaavedra/workflow-telemetry-action@raw_data
      with:
        save_raw_stats: true
    - name: Checkout
      uses: actions/checkout@v4
    - name: Show Environment
      run: 'echo "PWD:"

        pwd

        echo "ENVIRONMENT:"

        env

        echo "C Compiler:"

        gcc --version

        '
    - name: Add dependencies
      run: apk add libc6-compat
    - name: Build V
      run: CC=gcc make
    - name: All code is formatted
      run: VJOBS=1 ./v test-cleancode
    - name: Run only essential tests
      run: VTEST_JUST_ESSENTIAL=1 ./v test-self
    timeout-minutes: 241
  ubuntu-docker-musl:
    container:
      env:
        VFLAGS: -cc musl-gcc -gc none
        V_CI_UBUNTU_MUSL: 1
      image: thevlang/vlang:ubuntu-build
      volumes:
      - ${{github.workspace}}:/opt/vlang
    permissions: write-all
    runs-on: ubuntu-20.04
    steps:
    - name: Collect Workflow Telemetry
      uses: Nfsaavedra/workflow-telemetry-action@raw_data
      with:
        save_raw_stats: true
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build V
      run: echo $VFLAGS && make -j4 && ./v -cg -o v cmd/v
    - name: Verify `v test` works
      run: 'echo $VFLAGS

        ./v cmd/tools/test_if_v_test_system_works.v

        ./cmd/tools/test_if_v_test_system_works

        '
    - name: All code is formatted
      run: ./v test-cleancode
    - name: Test V fixed tests
      run: ./v test-self vlib
    timeout-minutes: 121
name: Docker CI
'on':
- workflow_dispatch
permissions: write-all
